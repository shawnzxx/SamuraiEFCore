// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.Contexts;

namespace WebApi.Migrations
{
    [DbContext(typeof(SamuraiContext))]
    [Migration("20190718053027_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApi.Entities.Battle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate");

                    b.Property<string>("Name");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("Id");

                    b.ToTable("Battles");
                });

            modelBuilder.Entity("WebApi.Entities.Quote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SamuraiId");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.HasIndex("SamuraiId");

                    b.ToTable("Quotes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            SamuraiId = 1,
                            Text = "I told you watch out my shape sword, ohh well!"
                        },
                        new
                        {
                            Id = 2,
                            SamuraiId = 1,
                            Text = "I am here to defeat you"
                        },
                        new
                        {
                            Id = 3,
                            SamuraiId = 1,
                            Text = "I am happy now"
                        },
                        new
                        {
                            Id = 4,
                            SamuraiId = 2,
                            Text = "Trash, Trash, Trash!!"
                        },
                        new
                        {
                            Id = 5,
                            SamuraiId = 2,
                            Text = "Come, I will show you the way"
                        },
                        new
                        {
                            Id = 6,
                            SamuraiId = 3,
                            Text = "Roger that"
                        },
                        new
                        {
                            Id = 7,
                            SamuraiId = 3,
                            Text = "It's a fun game, isn't it?"
                        },
                        new
                        {
                            Id = 8,
                            SamuraiId = 4,
                            Text = "Dame it! Dame it!! Dame it!!!"
                        },
                        new
                        {
                            Id = 9,
                            SamuraiId = 5,
                            Text = "OMG"
                        },
                        new
                        {
                            Id = 10,
                            SamuraiId = 5,
                            Text = "Let's get it to work now"
                        },
                        new
                        {
                            Id = 11,
                            SamuraiId = 5,
                            Text = "Shiock! We finaly did that, Let's have a chicken soup tonight"
                        });
                });

            modelBuilder.Entity("WebApi.Entities.Samurai", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Samurais");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Shawnzxx"
                        },
                        new
                        {
                            Id = 2,
                            Name = "TuZi"
                        },
                        new
                        {
                            Id = 3,
                            Name = "BaBa"
                        },
                        new
                        {
                            Id = 4,
                            Name = "BabaTu"
                        },
                        new
                        {
                            Id = 5,
                            Name = "TuBaba"
                        });
                });

            modelBuilder.Entity("WebApi.Entities.SamuraiBattle", b =>
                {
                    b.Property<int>("SamuraiId");

                    b.Property<int>("BattleId");

                    b.HasKey("SamuraiId", "BattleId");

                    b.HasIndex("BattleId");

                    b.ToTable("SamuraiBattle");
                });

            modelBuilder.Entity("WebApi.Entities.SecretIdentity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RealName");

                    b.Property<int>("SamuraiId");

                    b.HasKey("Id");

                    b.HasIndex("SamuraiId")
                        .IsUnique();

                    b.ToTable("SecretIdentity");
                });

            modelBuilder.Entity("WebApi.Entities.Quote", b =>
                {
                    b.HasOne("WebApi.Entities.Samurai", "Samurai")
                        .WithMany("Quotes")
                        .HasForeignKey("SamuraiId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApi.Entities.SamuraiBattle", b =>
                {
                    b.HasOne("WebApi.Entities.Battle", "Battle")
                        .WithMany("SamuraiBattles")
                        .HasForeignKey("BattleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApi.Entities.Samurai", "Samurai")
                        .WithMany("SamuraiBattles")
                        .HasForeignKey("SamuraiId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApi.Entities.SecretIdentity", b =>
                {
                    b.HasOne("WebApi.Entities.Samurai", "Samurai")
                        .WithOne("SecretIdentity")
                        .HasForeignKey("WebApi.Entities.SecretIdentity", "SamuraiId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
